{"version":3,"sources":["serviceWorker.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/counterButton.js","components/Header.js","containers/App.js","actions.js","constants.js","reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Card","id","name","email","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchField","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","hasError","info","this","setState","React","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","App","onRequestRobots","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","response","json","data","initialStateSearch","initialStateRequest","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2PAYMA,G,MAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,6CClFlDC,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,yBAAKC,UAAU,mDACX,yBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,mBACrB,6BACI,4BAAKC,GACL,2BAAIC,MCeLI,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,6BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,kBAAC,EAAD,CACIC,IAAKJ,EAAOG,GAAGV,GACfA,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,WARrC,MCaOU,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAE7B,OADArB,QAAQC,IAAI,aAER,6BACI,2BACIqB,aAAW,gBACXZ,UAAU,mCACVa,KAAK,SACLC,YAAY,qBACZC,SAAUJ,MCFXK,EARA,SAACC,GACZ,OACI,yBAAKC,MAAO,CAACC,UAAW,OAAQC,OAAQ,kBAAmBC,OAAQ,UAC9DJ,EAAMK,WCiBJC,E,YAnBX,aAAe,IAAD,8BACV,+CACKnC,MAAQ,CACToC,UAAU,GAHJ,E,+EAOI7B,EAAO8B,GACrBC,KAAKC,SAAS,CAACH,UAAU,M,+BAIrB,OAAGE,KAAKtC,MAAMoC,SACH,uEAEJE,KAAKT,MAAMK,a,GAhBHM,IAAMC,WCgClBC,G,kBA/Bd,aAAe,IAAD,8BACb,+CAaDC,YAAc,WACb,EAAKJ,UAAU,SAAAvC,GAEb,MAAO,CAAC4C,MAAO,EAAK5C,MAAM4C,MAAQ,OAfpC,EAAK5C,MAAQ,CACZ,MAAS,GAHG,E,mFAOQ6C,EAAWC,GAChC,OAAGR,KAAKtC,MAAM4C,QAAUE,EAAUF,Q,+BAclC,OACC,4BAAQG,MAAOT,KAAKtC,MAAM+C,MAAOC,QAASV,KAAKK,aAA/C,UACSL,KAAKtC,MAAM4C,W,GAzBKH,cCiBbQ,E,iLATP,OACC,6BACC,wBAAIrC,UAAU,MAAd,eACA,kBAAC,EAAD,CAAemC,MAAO,a,GAVXN,aCyBfS,E,4LAGEZ,KAAKT,MAAMsB,oB,+BAGL,IAAD,EACsDb,KAAKT,MAAxDP,EADH,EACGA,YAAa8B,EADhB,EACgBA,eAAgBpC,EADhC,EACgCA,OAAQqC,EADxC,EACwCA,UACvCC,EAAiBtC,EAAOuC,QAAO,SAAAC,GACjC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASpC,EAAYmC,kBAGzD,OAAOJ,EACH,wBAAIzC,UAAU,cAAd,eAEI,yBAAKA,UAAU,MACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWW,aAAc6B,IACzB,kBAAC,EAAD,KACA,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUpC,OAAQsC,W,GApBxBd,IAAMC,WA4BTkB,eA5CS,SAAA3D,GACpB,MAAO,CACHsB,YAAatB,EAAM4D,aAAatC,YAChCN,OAAQhB,EAAM6D,cAAc7C,OAC5BqC,UAAWrD,EAAM6D,cAAcR,UAC/B9C,MAAOP,EAAM6D,cAActD,UAIR,SAACuD,GACxB,MAAO,CACHV,eAAgB,SAACW,GAAD,OAAWD,EChBM,CACrCrC,KCR+B,sBDS/BuC,QDcuDD,EAAME,OAAOC,SAChEf,gBAAiB,kBAAMW,GCZI,SAACA,GAChCA,EAAS,CAACrC,KCXwB,2BDYlC0C,MAAM,8CACDzE,MAAK,SAAA0E,GAAQ,OAAIA,EAASC,UAC1B3E,MAAK,SAAA4E,GAAI,OAAIR,EAAS,CAACrC,KCbM,yBDauBuC,QAASM,OAC7DhE,OAAM,SAAAC,GAAK,OAAIuD,EAAS,CAACrC,KCbI,wBDawBuC,QAASzD,cDuCxDoD,CAA6CT,GGhDtDqB,EAAqB,CACvBjD,YAAa,IAYXkD,EAAsB,CACxBxD,OAAQ,GACRqC,WAAW,EACX9C,MAAO,ICXLkE,EAAcC,YAAgB,CAACd,aDDT,WAA0C,IAAzC5D,EAAwC,uDAAlCuE,EAAoBI,EAAc,uDAAP,GAC1D,OAAOA,EAAOlD,MACV,IDd2B,sBCevB,OAAOmD,OAAOC,OAAO,GAAI7E,EAAO,CAACsB,YAAaqD,EAAOX,UACzD,QACI,OAAOhE,ICJgC6D,cDctB,WAA2C,IAA1C7D,EAAyC,uDAAnCwE,EAAqBG,EAAc,uDAAP,GAC5D,OAAOA,EAAOlD,MACV,ID3B8B,yBC4B1B,OAAOmD,OAAOC,OAAO,GAAI7E,EAAO,CAACqD,WAAW,IAChD,ID5B8B,yBC6B1B,OAAOuB,OAAOC,OAAO,GAAI7E,EAAO,CAACgB,OAAQ2D,EAAOX,QAASX,WAAW,IACxE,ID7B8B,wBC8B1B,OAAOuB,OAAOC,OAAO,GAAI7E,EAAO,CAACO,MAAOoE,EAAOX,QAASX,WAAU,IACtE,QACI,OAAOrD,MCtBb8E,EAAQC,YAAYN,EAAaO,YAAgBC,MAEvDC,IAASC,OACG,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OACSM,SAASC,eAAe,SZG1C,SAAkB/F,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI+F,IAAIC,cAAwBvG,OAAOC,SAASuG,MACpDC,SAAWzG,OAAOC,SAASwG,OAIvC,OAGFzG,OAAO0G,iBAAiB,QAAQ,WAC9B,IAAMrG,EAAK,UAAMkG,cAAN,sBAEPzG,IAgEV,SAAiCO,EAAOC,GAEtC6E,MAAM9E,EAAO,CACXsG,QAAS,CAAE,iBAAkB,YAE5BjG,MAAK,SAAA0E,GAEJ,IAAMwB,EAAcxB,EAASuB,QAAQE,IAAI,gBAEnB,MAApBzB,EAAS0B,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CxG,UAAUC,cAAcwG,MAAMtG,MAAK,SAAAC,GACjCA,EAAasG,aAAavG,MAAK,WAC7BV,OAAOC,SAASiH,eAKpB9G,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAgG,CAAwB9G,EAAOC,GAI/BC,UAAUC,cAAcwG,MAAMtG,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OY1B/BE,K","file":"static/js/main.7c6ab602.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\nconst Card = ({id, name, email}) => {\n    return (\n        <div className=\"bg-light-green dib br3 pa ma2 grow bw3 shadow-5\">\n            <img alt=\"robots\" src={`https://robohash.org/${id}?size=200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card \n                            key={robots[i].id}\n                            id={robots[i].id}\n                            name={robots[i].name}\n                            email={robots[i].email}\n                        />\n\n                    );\n                })\n            };\n        </div>\n    );\n}\n\nexport default CardList;","import React from \"react\";\n\n\nconst SearchBox = ({searchField, searchChange}) => {\n    console.log(\"searchBox\");\n    return (\n        <div>\n            <input \n                aria-label='Search Robots'\n                className=\"pa3 ba bg-lightest-blue b--green\"\n                type=\"search\" \n                placeholder=\"Search Robots ... \"\n                onChange={searchChange}\n                />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style={{overflowY: 'auto', border: \"1px solid black\", height: \"600px\"}}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React from \"react\";\n\nclass ErrorBoundry extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true});\n    }\n\n    render() {\n            if(this.state.hasError) {\n                return <h1>Ooooops something went wrong try Later.</h1>\n            }\n            return this.props.children;\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from \"react\";\n\nclass CounterButton extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t\"count\": 0\n\t\t}\n\t}\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\tif(this.state.count !== nextState.count) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tupdateCount = () => {\n\t\tthis.setState( state => \n\t\t\t{\n\t\t\t\treturn {count: this.state.count + 1};\n\t\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<button color={this.state.color} onClick={this.updateCount}>\n\t\t\t\tcount: {this.state.count}\n\t\t\t</button>\n\t\t);\t\n\t}\n\n}\n\nexport default CounterButton;","import React, { Component } from \"react\";\nimport CounterButton from \"./counterButton\";\n\nclass Header extends Component {\n\n\t// shouldComponentUpdate(nextProps, nextState) {\n\t// \treturn false;\n\t// }\n\n    render() {\n        return (\n        \t<div>\n        \t\t<h1 className=\"f1\">RoboFriends</h1>\n        \t\t<CounterButton color={'red'}/>\n        \t</div>\n        )\t\n    }\n}\n\nexport default Header;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport \"./App.css\";\nimport { setSearchField, requestRobots } from \"../actions\";\nimport Header from \"../components/Header\";\n\n\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchRobots.searchField,\n        robots: state.requestRobots.robots,\n        isPending: state.requestRobots.isPending,\n        error: state.requestRobots.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestRobots: () => dispatch(requestRobots())\n    }\n}\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.onRequestRobots();\n    }\n\n    render() {\n        const { searchField, onSearchChange, robots, isPending } = this.props;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n\n        return isPending ?\n            <h1 className=\"tc pa3 ma2\">Loading ...</h1> :  \n            (\n                <div className=\"tc\">\n                    <Header />\n                    <SearchBox searchChange={onSearchChange} />\n                    <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                    </Scroll>\n                </div>\n            );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { \n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED \n} from \"./constants\";\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n});\n\nexport const requestRobots = () => (dispatch) => {\n    dispatch({type:REQUEST_ROBOTS_PENDING});\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then(response => response.json())\n        .then(data => dispatch({type:REQUEST_ROBOTS_SUCCESS, payload: data}))\n        .catch(error => dispatch({type:REQUEST_ROBOTS_FAILED, payload: error}))\n}\n\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED  = \"REQUEST_ROBOTS_FAILED\";","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED\n} from \"./constants\";\n\n\nconst initialStateSearch = {\n    searchField: \"\"\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, {searchField: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialStateRequest = {\n    robots: [],\n    isPending: false,\n    error: \"\"\n}\n\nexport const requestRobots = (state=initialStateRequest, action={}) => {\n    switch(action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, {isPending: true});\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, {robots: action.payload, isPending: false})\n        case REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, {error: action.payload, isPending:false})\n        default:\n            return state;\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore , applyMiddleware, combineReducers} from \"redux\";\n// import { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport \"tachyons\";\nimport App from \"./containers/App\";\nimport { searchRobots, requestRobots } from \"./reducers\";\n\n// const logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}